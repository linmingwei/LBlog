<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.demo.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.springboot.demo.entity.Article">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="typeId" jdbcType="INTEGER" property="typeId"/>
        <result column="comment" jdbcType="BIT" property="comment"/>
        <result column="top" jdbcType="BIT" property="top"/>
        <result column="order" jdbcType="INTEGER" property="order"/>
        <result column="favorite" jdbcType="INTEGER" property="favorite"/>
        <result column="look" jdbcType="INTEGER" property="look"/>
        <result column="contentHTML" jdbcType="VARCHAR" property="contentHTML"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.springboot.demo.entity.Article">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into article (title, content, `status`,
        description, createTime, updateTime,
        typeId, `comment`, `top`, `order`,`look`,`favorite`,`contentHTML`,`image`
        )
        values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
        #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{typeId,jdbcType=INTEGER}, #{comment,jdbcType=BIT}, #{top,jdbcType=BIT}, #{order,jdbcType=INTEGER},
        #{look,jdbcType=INTEGER}, #{favorite,jdbcType=INTEGER}, #{contentHTML,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.springboot.demo.entity.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      typeId = #{typeId,jdbcType=INTEGER},
      `comment` = #{comment,jdbcType=BIT},
      `top` = #{top,jdbcType=BIT},
      `order` = #{order,jdbcType=INTEGER},
      `look` = #{look,jdbcType=INTEGER},
      `favorite` = #{favorite,jdbcType=INTEGER},
      `contentHTML` = #{contentHTML,jdbcType=VARCHAR},
      `image` = #{image,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, title, content, `status`, description, createTime, updateTime, typeId, 
    `comment`, `top`, `order`,`look`,`favorite`,contentHTML,`image`
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" parameterType="java.util.Map" resultMap="BaseResultMap">
        select id, title, content, `status`, description, createTime, updateTime, typeId,
        `comment`, `top`, `order`,`look`,`favorite`,contentHTML,`image`
        from article order by
        <choose>
            <when test="order!=null">
                ${order}
                <if test="type!=null">
                    ${type}
                </if>

            </when>
            <otherwise>
                id asc
            </otherwise>
        </choose>
        <if test="limit!=null">
            limit ${limit}
        </if>
    </select>
    <select id="count" resultType="java.lang.Integer">
      select COUNT(*) from article;
    </select>
    <select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
        select id, title, content, `status`, description, createTime, updateTime, typeId,
    `comment`, `top`, `order`,`look`,`favorite`,contentHTML,`image`
    from article
    <where>
        <if test="typeId!=null">
            and typeId = #{typeId}
        </if>
        <if test="status!=null">
            and status = #{status}
        </if>
        <if test="noid!=null">
            and id != #{noid}
        </if>
        <if test="id!=null">
            and id = #{id}
        </if>
        <if test="gtid!=null">
            and id &gt; #{gtid}
        </if>
        <if test="ltid!=null">
            and id &lt; #{ltid}
        </if>
    </where>
    order by
    <choose>
        <when test="order!=null">
            ${order}
            <if test="type!=null">
                ${type}
            </if>

        </when>
        <otherwise>
            id asc
        </otherwise>
    </choose>

    <if test="limit!=null">
        limit ${limit}
    </if>
    </select>
</mapper>