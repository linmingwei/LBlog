<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.demo.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.springboot.demo.entity.Article">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="typeId" jdbcType="INTEGER" property="typeid" />
    <result column="tagId" jdbcType="INTEGER" property="tagid" />
    <result column="cId" jdbcType="INTEGER" property="cid" />
    <result column="top" jdbcType="BIT" property="top" />
    <result column="order" jdbcType="INTEGER" property="order" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.demo.entity.Article">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into article (title, content, status, 
      description, createTime, updateTime, 
      typeId, tagId, cId, 
      top, order)
    values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{description,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{typeid,jdbcType=INTEGER}, #{tagid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, 
      #{top,jdbcType=BIT}, #{order,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.springboot.demo.entity.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      description = #{description,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      typeId = #{typeid,jdbcType=INTEGER},
      tagId = #{tagid,jdbcType=INTEGER},
      cId = #{cid,jdbcType=INTEGER},
      top = #{top,jdbcType=BIT},
      order = #{order,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, title, content, status, description, createTime, updateTime, typeId, tagId, 
    cId, top, order
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, title, content, status, description, createTime, updateTime, typeId, tagId, 
    cId, top, order
    from article
  </select>
</mapper>