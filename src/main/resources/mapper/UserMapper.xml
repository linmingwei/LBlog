<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.demo.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.springboot.demo.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="userType" jdbcType="CHAR" property="userType" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="regIp" jdbcType="VARCHAR" property="regIp" />
    <result column="lastLoginIp" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="loginCount" jdbcType="INTEGER" property="loginCount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.demo.entity.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (username, `password`, nickname, 
      mobile, email, qq, 
      birthday, gender, avatar, 
      userType, `location`, regIp, 
      lastLoginIp, lastLoginTime, loginCount, 
      `status`, createTime)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{gender,jdbcType=TINYINT}, #{avatar,jdbcType=VARCHAR}, 
      #{userType,jdbcType=CHAR}, #{location,jdbcType=VARCHAR}, #{regIp,jdbcType=VARCHAR}, 
      #{lastLoginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{loginCount,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.springboot.demo.entity.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      gender = #{gender,jdbcType=TINYINT},
      avatar = #{avatar,jdbcType=VARCHAR},
      userType = #{userType,jdbcType=CHAR},
      `location` = #{location,jdbcType=VARCHAR},
      regIp = #{regIp,jdbcType=VARCHAR},
      lastLoginIp = #{lastLoginIp,jdbcType=VARCHAR},
      lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
      loginCount = #{loginCount,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, username, `password`, nickname, mobile, email, qq, birthday, gender, avatar, 
    userType, `location`, regIp, lastLoginIp, lastLoginTime, loginCount, `status`, createTime
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, `password`, nickname, mobile, email, qq, birthday, gender, avatar, 
    userType, `location`, regIp, lastLoginIp, lastLoginTime, loginCount, `status`, createTime
    from user
  </select>
</mapper>