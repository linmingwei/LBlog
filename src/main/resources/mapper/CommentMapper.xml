<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.demo.mapper.CommentMapper">
  <resultMap id="BaseResultMap" type="com.springboot.demo.entity.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="aid" jdbcType="INTEGER" property="aid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.demo.entity.Comment">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment (username, description, aid, 
      createTime, updateTime, content, 
      email, pid, `status`,`favorite`,`ipaddr`,`local`)
    values (#{username,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{aid,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{favorite,jdbcType=INTEGER}
    , #{ipaddr,jdbcType=VARCHAR}, #{local,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.springboot.demo.entity.Comment">
    update comment
    set username = #{username,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      aid = #{aid,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      `favorite` = #{favorite,jdbcType=INTEGER},
      `ipaddr` = #{ipaddr,jdbcType=VARCHAR},
      `local` = #{local,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, username, description, aid, createTime, updateTime, content, email, pid, 
    `status`, `favorite`, `ipaddr`, `local`
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, description, aid, createTime, updateTime, content, email, pid, 
    `status`,favorite, `ipaddr`, `local`
    from comment
  </select>
  <select id="count" resultType="java.lang.Integer">
    select count(*) from comment;
  </select>
  <select id="selectByMap" parameterType="map" resultMap="BaseResultMap">
    select id, username, description, aid, createTime, updateTime, content, email, pid,
    `status`,favorite, `ipaddr`, `local` from  comment
    <where>
      <if test="username!=null">
        username = #{username}
      </if>
      <if test="aid!=null">
        and aid = #{aid}
      </if>
      <if test="pid!=null">
        and pid = #{pid}
      </if>
      <if test="email!=null">
        and email = #{email}
      </if>

    </where>
  </select>
</mapper>