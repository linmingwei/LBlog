<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.demo.mapper.ResourcesMapper">
  <resultMap id="BaseResultMap" type="com.springboot.demo.entity.Resources">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="available" jdbcType="TINYINT" property="available" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="baseParams">
    id, `name`, `type`, url, permission, pid, sort, available, icon, createTime,
    updateTime, `alias`
  </sql>
  <sql id="insertParams">
    #{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR},
      #{permission,jdbcType=VARCHAR}, #{pid,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER},
      #{available,jdbcType=TINYINT}, #{icon,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},#{alias,jdbcType=VARCHAR}
  </sql>
  <sql id="updateParams">
    `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      available = #{available,jdbcType=TINYINT},
      icon = #{icon,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      `alias` = #{alias,jdbcType=VARCHAR}
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resources
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.demo.entity.Resources">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into resources (
    <include refid="baseParams"/>
    )
    values (
    <include refid="insertParams"/>
  )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.springboot.demo.entity.Resources">
    update resources
    set  <include refid="updateParams"/>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="baseParams"/>
    from resources
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select <include refid="baseParams"/>
    from resources
  </select>
</mapper>